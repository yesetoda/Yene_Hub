{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/auth/google": {
            "get": {
                "description": "Redirects to Google's OAuth2 authentication page",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Start Google OAuth",
                "responses": {
                    "302": {
                        "description": "Redirect to Google OAuth"
                    },
                    "500": {
                        "description": "OAuth configuration error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/google/callback": {
            "get": {
                "description": "Handle Google OAuth callback and return JWT token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Google OAuth callback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization code from Google",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "OAuth state parameter",
                        "name": "state",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "OAuth error description",
                        "name": "error",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication token",
                        "schema": {
                            "$ref": "#/definitions/schemas.AuthTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Missing code parameter",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized/Unverified email",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Token exchange error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "User email",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "User password",
                        "name": "password",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "schema": {
                            "$ref": "#/definitions/schemas.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid email or password",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get paginated list of users with optional filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "default": 20,
                        "description": "Items per page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users",
                        "schema": {
                            "$ref": "#/definitions/schemas.PaginatedUsers"
                        }
                    },
                    "400": {
                        "description": "Invalid pagination parameters",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new user account with required information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User creation data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created user",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get detailed information about a specific user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user details",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "int64",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    },
                    "400": {
                        "description": "Invalid user ID",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update existing user information. Only provided fields will be updated.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user details",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "uint32",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Partial user data for update",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format or request body",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Permanently delete a user account and associated data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user account",
                "parameters": [
                    {
                        "type": "integer",
                        "format": "uint32",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.APIToken": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "expires_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "entity.Attendance": {
            "type": "object",
            "properties": {
                "at": {
                    "description": "Time when attendance was taken",
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "head": {
                    "$ref": "#/definitions/entity.User"
                },
                "head_id": {
                    "description": "The head who recorded this attendance",
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "session": {
                    "$ref": "#/definitions/entity.Session"
                },
                "session_id": {
                    "type": "integer"
                },
                "status": {
                    "description": "e.g., 0=absent, 1=present, 2=excused",
                    "type": "integer"
                },
                "type": {
                    "description": "Type of attendance record",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "entity.Comment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "post": {
                    "$ref": "#/definitions/entity.Post"
                },
                "post_id": {
                    "type": "integer"
                },
                "problem": {
                    "$ref": "#/definitions/entity.Problem"
                },
                "problem_id": {
                    "type": "integer"
                },
                "replies": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Comment"
                    }
                },
                "reply": {
                    "$ref": "#/definitions/entity.Comment"
                },
                "reply_id": {
                    "type": "integer"
                },
                "submission": {
                    "$ref": "#/definitions/entity.Submission"
                },
                "submission_id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "track": {
                    "$ref": "#/definitions/entity.Track"
                },
                "track_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                },
                "user_id": {
                    "type": "integer"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Vote"
                    }
                }
            }
        },
        "entity.Contest": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "link2": {
                    "type": "string"
                },
                "link3": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "problem_count": {
                    "type": "integer"
                },
                "problems": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Problem"
                    }
                },
                "super_group": {
                    "$ref": "#/definitions/entity.SuperGroup"
                },
                "super_group_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "unrated": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "votes": {
                    "description": "Ratings       []Rating       `json:\"ratings,omitempty\" gorm:\"foreignKey:ContestID\"`\nDivisionUsers []DivisionUser `json:\"division_users,omitempty\" gorm:\"foreignKey:ContestID\"`",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Vote"
                    }
                }
            }
        },
        "entity.Country": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Group"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "short_code": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "users": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.User"
                    }
                }
            }
        },
        "entity.DailyProblem": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "for_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "problem": {
                    "$ref": "#/definitions/entity.Problem"
                },
                "problem_id": {
                    "type": "integer"
                },
                "super_group": {
                    "$ref": "#/definitions/entity.SuperGroup"
                },
                "super_group_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Exercise": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "group": {
                    "$ref": "#/definitions/entity.Group"
                },
                "group_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "problem": {
                    "$ref": "#/definitions/entity.Problem"
                },
                "problem_id": {
                    "type": "integer"
                },
                "track": {
                    "$ref": "#/definitions/entity.Track"
                },
                "track_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Fund": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "sessions": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Session"
                    }
                },
                "stipends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Stipend"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.GoogleOAuth": {
            "type": "object",
            "properties": {
                "calendar_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "encrypted_token_string": {
                    "type": "string"
                },
                "group": {
                    "$ref": "#/definitions/entity.Group"
                },
                "group_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "entity.Group": {
            "type": "object",
            "properties": {
                "country": {
                    "$ref": "#/definitions/entity.Country"
                },
                "country_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "exercises": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Exercise"
                    }
                },
                "google_oauths": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.GoogleOAuth"
                    }
                },
                "group_sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.GroupSession"
                    }
                },
                "hoa_id": {
                    "description": "Head of Academy ID",
                    "type": "integer"
                },
                "hoas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.HOA"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "invites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Invite"
                    }
                },
                "name": {
                    "type": "string"
                },
                "short_name": {
                    "type": "string"
                },
                "super_to_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.SuperToGroup"
                    }
                },
                "updated_at": {
                    "type": "string"
                },
                "users": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.User"
                    }
                }
            }
        },
        "entity.GroupSession": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "group": {
                    "$ref": "#/definitions/entity.Group"
                },
                "group_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "session": {
                    "$ref": "#/definitions/entity.Session"
                },
                "session_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.HOA": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "group": {
                    "$ref": "#/definitions/entity.Group"
                },
                "group_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "entity.Invite": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "group": {
                    "$ref": "#/definitions/entity.Group"
                },
                "group_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "description": "Unique invite key",
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/entity.Role"
                },
                "role_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "used": {
                    "description": "Whether the invite has been used",
                    "type": "boolean"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                },
                "user_id": {
                    "description": "User who created the invite",
                    "type": "integer"
                }
            }
        },
        "entity.Post": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "comments": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Comment"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "post_to_tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.PostToTag"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                },
                "user_id": {
                    "type": "integer"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Vote"
                    }
                }
            }
        },
        "entity.PostTag": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "post_to_tags": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.PostToTag"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.PostToTag": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "post": {
                    "$ref": "#/definitions/entity.Post"
                },
                "post_id": {
                    "type": "integer"
                },
                "post_tag": {
                    "$ref": "#/definitions/entity.PostTag"
                },
                "post_tag_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Problem": {
            "type": "object",
            "properties": {
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Comment"
                    }
                },
                "contest": {
                    "$ref": "#/definitions/entity.Contest"
                },
                "contest_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "daily_problems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.DailyProblem"
                    }
                },
                "difficulty": {
                    "type": "string"
                },
                "exercises": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Exercise"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "problem_tracks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ProblemTrack"
                    }
                },
                "submissions": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Submission"
                    }
                },
                "tag": {
                    "type": "string"
                },
                "track": {
                    "$ref": "#/definitions/entity.Track"
                },
                "track_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Vote"
                    }
                }
            }
        },
        "entity.ProblemTrack": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "problem": {
                    "$ref": "#/definitions/entity.Problem"
                },
                "problem_id": {
                    "type": "integer"
                },
                "track": {
                    "$ref": "#/definitions/entity.Track"
                },
                "track_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.RecentAction": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "entity.Role": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "invites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Invite"
                    }
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "users": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.User"
                    }
                }
            }
        },
        "entity.Session": {
            "type": "object",
            "properties": {
                "attendances": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Attendance"
                    }
                },
                "calendar_event_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "fund": {
                    "$ref": "#/definitions/entity.Fund"
                },
                "fund_id": {
                    "type": "integer"
                },
                "group_sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.GroupSession"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "lecturer": {
                    "$ref": "#/definitions/entity.User"
                },
                "lecturer_id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "meet_link": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "recording_link": {
                    "type": "string"
                },
                "resource_link": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "stipends": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Stipend"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Stipend": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "fund": {
                    "$ref": "#/definitions/entity.Fund"
                },
                "fund_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "paid": {
                    "type": "boolean"
                },
                "session": {
                    "$ref": "#/definitions/entity.Session"
                },
                "session_id": {
                    "type": "integer"
                },
                "share": {
                    "description": "Share of the fund amount",
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "entity.Submission": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "comments": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Comment"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "in_contest": {
                    "description": "Whether it was solved in a contest",
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "problem": {
                    "$ref": "#/definitions/entity.Problem"
                },
                "problem_id": {
                    "type": "integer"
                },
                "time_spent": {
                    "description": "Time spent in seconds",
                    "type": "integer"
                },
                "tries": {
                    "description": "Number of attempts",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                },
                "user_id": {
                    "type": "integer"
                },
                "verified": {
                    "type": "boolean"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Vote"
                    }
                }
            }
        },
        "entity.SuperGroup": {
            "type": "object",
            "properties": {
                "contests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Contest"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "daily_problems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.DailyProblem"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "super_to_groups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.SuperToGroup"
                    }
                },
                "tracks": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Track"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.SuperToGroup": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "group": {
                    "$ref": "#/definitions/entity.Group"
                },
                "group_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "super_group": {
                    "$ref": "#/definitions/entity.SuperGroup"
                },
                "super_group_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Track": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Comment"
                    }
                },
                "created_at": {
                    "type": "string"
                },
                "exercises": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Exercise"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "problem_tracks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.ProblemTrack"
                    }
                },
                "problems": {
                    "description": "Relations",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Problem"
                    }
                },
                "super_group": {
                    "$ref": "#/definitions/entity.SuperGroup"
                },
                "super_group_id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Vote"
                    }
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "api_tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.APIToken"
                    }
                },
                "attendances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Attendance"
                    }
                },
                "birthday": {
                    "description": "Personal Information",
                    "type": "string"
                },
                "code_of_conduct": {
                    "type": "string"
                },
                "codeforces": {
                    "type": "string"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Comment"
                    }
                },
                "config": {
                    "type": "string"
                },
                "country": {
                    "$ref": "#/definitions/entity.Country"
                },
                "country_id": {
                    "type": "integer"
                },
                "created_at": {
                    "description": "Timestamps",
                    "type": "string"
                },
                "cv": {
                    "description": "Professional Details",
                    "type": "string"
                },
                "department": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "expected_graduation_date": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "github": {
                    "type": "string"
                },
                "group": {
                    "$ref": "#/definitions/entity.Group"
                },
                "group_id": {
                    "type": "integer"
                },
                "hackerrank": {
                    "type": "string"
                },
                "head_attendances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Attendance"
                    }
                },
                "id": {
                    "description": "Core Identity Fields",
                    "type": "integer"
                },
                "inactive": {
                    "type": "boolean"
                },
                "instagram": {
                    "type": "string"
                },
                "joined_date": {
                    "type": "string"
                },
                "leetcode": {
                    "description": "Coding Profiles (optional)\nUse pointer types so that if no value is provided, they remain nil.",
                    "type": "string"
                },
                "linkedin": {
                    "description": "Social Media (all optional)",
                    "type": "string"
                },
                "mentor_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "description": "Contact Information",
                    "type": "string"
                },
                "photo": {
                    "description": "System Fields",
                    "type": "string"
                },
                "posts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Post"
                    }
                },
                "preferred_language": {
                    "type": "string"
                },
                "recent_actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.RecentAction"
                    }
                },
                "role": {
                    "$ref": "#/definitions/entity.Role"
                },
                "role_id": {
                    "description": "Role and Relationships",
                    "type": "integer"
                },
                "short_bio": {
                    "type": "string"
                },
                "student_id": {
                    "type": "string"
                },
                "submissions": {
                    "description": "Relations (using GORM associations)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.Submission"
                    }
                },
                "telegram_uid": {
                    "type": "string"
                },
                "telegram_username": {
                    "type": "string"
                },
                "tshirt_color": {
                    "description": "Physical Attributes",
                    "type": "string"
                },
                "tshirt_size": {
                    "type": "string"
                },
                "university": {
                    "description": "Academic Information",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Vote": {
            "type": "object",
            "properties": {
                "comment": {
                    "$ref": "#/definitions/entity.Comment"
                },
                "comment_id": {
                    "type": "integer"
                },
                "contest": {
                    "$ref": "#/definitions/entity.Contest"
                },
                "contest_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "post": {
                    "$ref": "#/definitions/entity.Post"
                },
                "post_id": {
                    "type": "integer"
                },
                "problem": {
                    "$ref": "#/definitions/entity.Problem"
                },
                "problem_id": {
                    "type": "integer"
                },
                "submission": {
                    "$ref": "#/definitions/entity.Submission"
                },
                "submission_id": {
                    "type": "integer"
                },
                "track": {
                    "$ref": "#/definitions/entity.Track"
                },
                "track_id": {
                    "type": "integer"
                },
                "type": {
                    "description": "e.g., 1=upvote, -1=downvote",
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "schemas.AuthTokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                }
            }
        },
        "schemas.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "details": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "schemas.LoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/entity.User"
                }
            }
        },
        "schemas.PaginatedUsers": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.User"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/schemas.PaginationMeta"
                }
            }
        },
        "schemas.PaginationMeta": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "schemas.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        }
    }
}